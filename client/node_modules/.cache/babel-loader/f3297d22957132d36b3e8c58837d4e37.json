{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ga-es\\\\Documents\\\\DEV\\\\PERSO\\\\PORTFOLIOV2\\\\client\\\\src\\\\Component\\\\AuthenticatedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { RootContext } from '../Context/RootContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthRoute({\n  render,\n  ...routeProps\n}) {\n  _s();\n\n  const {\n    authenticated\n  } = useContext(RootContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...routeProps,\n    render: () => authenticated ? render() : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthRoute, \"sYI7VhCOiVEo1QieJlSnRFcXV5w=\");\n\n_c = AuthRoute;\n;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["C:/Users/ga-es/Documents/DEV/PERSO/PORTFOLIOV2/client/src/Component/AuthenticatedRoute.js"],"names":["React","useContext","Redirect","Route","RootContext","AuthRoute","render","routeProps","authenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AACA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAU,KAAGC;AAAb,CAAnB,EAA8C;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAoBP,UAAU,CAACG,WAAD,CAApC;AACA,sBACI,QAAC,KAAD,OACQG,UADR;AAEI,IAAA,MAAM,EAAE,MAAOC,aAAa,GACxBF,MAAM,EADkB,gBAExB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAXQD,S;;KAAAA,S;AAWR;AACD,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { RootContext } from '../Context/RootContext';\r\nfunction AuthRoute({ render, ...routeProps }) {\r\n    const { authenticated } = useContext(RootContext);\r\n    return (\r\n        <Route\r\n            {...routeProps}\r\n            render={() => (authenticated ?\r\n                render() :\r\n                <Redirect to='/login' />)\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default AuthRoute;"]},"metadata":{},"sourceType":"module"}